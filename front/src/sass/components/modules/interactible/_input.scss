@use '../../../abstracts/' as *;
@use 'sass:color';

@mixin createInput($theme) {
    .input-end-button {
        @include transformCenter($left: 92%);
        color: $clr-input-neutral;

        transition: color $input-border-color-transition-duration ease-in-out;
    }

    .input {
        padding: $input-padding;
        border: none;
        border: 2px solid $clr-input-neutral;
        border-radius: $border-radius-bevelled;
    
        background-color: $theme;
    
        transition: border-color $input-border-color-transition-duration ease-in-out;
        &:is(:hover, :focus-visible) {
            // border-color: $clr-input-border-on-hov;
            box-shadow: $input-box-shadow transparentize($theme, 0.25);
        }
    
        &[data-attachments*='border-flat'] {
            border-radius: 0;
        }
    
        &[data-attachments*='border-bottom'] {
            border-top: none;
            border-left: none;
            border-right: none;
    
            border-radius: 0;
        }
    
        &[data-attachments*='shadow-none'] {
            box-shadow: none;
        }
    
        &[data-attachments*='transparent'] {
            background-color: transparent;
        }
    }

    &:is(:focus-within) {
        .input-end-button {
            color: color.adjust($theme, $lightness: 50%);
        }
    }
}

.input-container {
    textarea {
        width: 100%;
        resize: vertical;
    }

    &[data-variant='primary'] {
        @include createInput($input-primary);
    }

    &.drag-drop-input-container {
        background-color: transparentize($drag-input-background, 0.8);
        
        border: 2px solid transparentize($clr-primary-500, 0.7);
        border-radius: $border-radius-bevelled;

        &[data-variant='compact'] {
            max-width: 100%;
            padding: $drag-input-compact-padding;
        }

        &[data-variant='drag-drop'] {
            padding: $drag-input-default-padding;
        }
    }
}